from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from loguru import logger

from telegram_bot.services.api_service import is_api_available

router = Router()

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–¥–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
contact_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üìû –ù–∞–¥–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)]],
    resize_keyboard=True,
    one_time_keyboard=True
)

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó —Å–ø—Ä–æ–±–∏
retry_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üîÅ –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑")]],
    resize_keyboard=True,
    one_time_keyboard=True
)

@router.message(Command("start"))
async def start(message: Message, state: FSMContext):
    logger.info(f"/start –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: telegram_id={message.from_user.id}")

    if not await is_api_available():
        logger.warning("–°–µ—Ä–≤–µ—Ä API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –ø—Ä–∏ –≤–∏–∫–ª–∏–∫—É /start")
        await message.answer(
            "‚ö†Ô∏è *–°–µ—Ä–≤–µ—Ä —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π.*\n–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.",
            parse_mode="Markdown",
            reply_markup=retry_keyboard
        )
        return

    logger.debug("–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É –Ω–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
    await message.answer(
        "üëã –í—ñ—Ç–∞—î–º–æ —É *ParkFlowUABot*!\n"
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:",
        parse_mode="Markdown",
        reply_markup=contact_keyboard
    )

@router.message(F.text == "üîÅ –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑")
async def retry_start(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –Ω–∞—Ç–∏—Å–Ω—É–≤ '–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑'")
    await start(message, state)
