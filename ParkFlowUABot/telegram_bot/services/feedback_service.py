# telegram_bot/services/feedback_service.py

import aiohttp
import logging
from telegram_bot.config import API_BASE_URL

logger = logging.getLogger(__name__)

FEEDBACK_API = f"{API_BASE_URL}/feedback"

# üî∏ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–≥—É–∫
async def send_feedback(user_id: int, text: str):
    payload = {
        "user_id": user_id,
        "text": text
    }

    logger.info(f"[FEEDBACK_SERVICE] –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –≤—ñ–¥–≥—É–∫—É: {payload}")

    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(FEEDBACK_API, json=payload) as resp:
                if resp.status in (200, 201):
                    data = await resp.json()
                    logger.info(f"[FEEDBACK_SERVICE] –í—ñ–¥–≥—É–∫ –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {data}")
                    return data
                else:
                    error_text = await resp.text()
                    logger.warning(f"[FEEDBACK_SERVICE] –°—Ç–∞—Ç—É—Å {resp.status}, –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {error_text}")
                    return None
    except aiohttp.ClientError as e:
        logger.exception(f"[FEEDBACK_SERVICE] HTTP-–ø–æ–º–∏–ª–∫–∞: {e}")
        return None
    except Exception as e:
        logger.exception(f"[FEEDBACK_SERVICE] –ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        return None


# üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –≤—ñ–¥–≥—É–∫–∏
async def get_all_feedbacks():
    logger.info("[FEEDBACK_SERVICE] –ó–∞–ø–∏—Ç —É—Å—ñ—Ö –≤—ñ–¥–≥—É–∫—ñ–≤")

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(FEEDBACK_API) as resp:
                if resp.status == 200:
                    data = await resp.json()
                    logger.info(f"[FEEDBACK_SERVICE] –û—Ç—Ä–∏–º–∞–Ω–æ {len(data)} –≤—ñ–¥–≥—É–∫—ñ–≤")
                    return data
                else:
                    error_text = await resp.text()
                    logger.warning(f"[FEEDBACK_SERVICE] –ü–æ–º–∏–ª–∫–∞ {resp.status}, –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {error_text}")
                    return []
    except aiohttp.ClientError as e:
        logger.exception(f"[FEEDBACK_SERVICE] HTTP-–ø–æ–º–∏–ª–∫–∞: {e}")
        return []
    except Exception as e:
        logger.exception(f"[FEEDBACK_SERVICE] –ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        return []
